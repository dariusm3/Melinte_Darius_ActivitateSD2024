#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include<string.h>
#include<malloc.h>

typedef struct Elev Elev;
typedef struct Nod Nod;
struct Elev
{
	int id;
	int nrMedii;
	float* medii;
};

struct Nod;
{
	Elev info;
	Nod* dr;
	Nod* st;
}

void inserareArbore(Nod** radacina, Elev e)
{
	if ((*radacina) != NULL)
	{
		if ((*radacina)->info.id > e.id)
		{
		inserareArbore(&((*radacina)->st), e);
     	}
		else
		{
			inserareArbore(&((*radacina)->dr), e);
		}
	else
	{
		Nod* nod = (Nod*)malloc(sizeof(Nod));
		nod->info = e;
		nod->st = NULL;
		nod->dr = NULL;

		*radacina = nod;
	}
}

	Elev citireElev(FILE * fp)
	{
		Elev e;
		fscanf(fp, "%d", &e.id);
		fscanf(fp, "%d", &e.nrMedii);
		e.medii = malloc(sizeof(float) * e.nrMedii);
		for (int i = 0; i < e.nrMedii; i++)
		{
			fscanf(fp,"%f",e.medii)
		}
	}


	Nod* citireFisier(char* numeFisier)
	{
		if (!numeFisier)
		{
			return NULL;
		}
		else
		{
			FILE* fp = fopen(numeFisier, "r");

			inr nrElevi;
			fscanf(fp, "%d", &nrElevi);

			for (int i = 0, i < nrElevi; i++)
			{
				Elev e = citireElev(fp);
				inserareArbore(&arbore, e);
			}
		}
		return arbore;
	}

	void afisareInOrder(Elev e)
	{
		prubtf("Elevul cu id-ul %d are mediile ", e.id);
		for (int i = 0; i < e.nrMedii; i++)
		{
			printf("%5.2f ", e.medii[i]);
		}
		printf("\n");

	void afisareInOrder(Nod* arbore)
	{
		if (arbore != NULL)
		{
			afisareInOrder(arbore->st);
			afisareElev();
			afisareInOrder(arbore->dr);
		}
	}

	float calculeazaMedieElev(Elev e)
	{
		if (e.nrMedii != 0)
		{
			for (int i = 0; i < e.nrMedii; i++)
			{
				float suma += e.medii[i];
			}
			return suma / e.nrMedii;
		}
		else
		{
			printf("Elevul nu are medii!");
		}
	}

	float calculeazaMedieGenerala(Nod* arbore)
	{
		int nrNote = 0;
		float suma = calculeazaSumaNote(arbore, &nrNote);
		return suma / nrNote;
	}



void main()
{
	Nod* arbore = citireFisier("Elevi.txt");
	afisareInOrder(Elev);
}

